<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time = 0
textLength = 0
print = ""
show_debug_message("textboxObject_create")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// see textboxScript for code source
// A lot of this is hard coded so I bet any resolution changes will fuck it up
// This should be refactored later on to make it dynamic

// Add letters over time
if time &lt; textLength {
    time += min(displaySpeed, textLength) // increment time by the speed
    
    if time &gt; string_length(print) {
        print = string_copy(text, 1, time)
    }
}

depth = -1 // We want our text box at the front
draw_sprite_stretched (
    Spr_TextBox,
    -1,
    0,
    window_get_height() * 0.6,
    window_get_width(),
    window_get_height() * 0.4,
)

boxPadding = 24 
textRatioIncrease = 1.5 // scale to this much idk 

draw_set_font(TEXT_BOX_FONT)
draw_set_color(TEXT_COLOR)
texture_set_interpolation(true)

fontSize = font_get_size(TEXT_BOX_FONT)
draw_text_ext_transformed (
    0  + boxPadding,
    (window_get_height() * 0.6) + boxPadding,
    print,
    (fontSize*1.5),
    (window_get_width() - boxPadding) / textRatioIncrease,
    textRatioIncrease,
    textRatioIncrease,
    0 // angle
)

texture_set_interpolation(false)
draw_set_color(DEFAULT_COLOR)
draw_set_font(DEFAULT_FONT)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
